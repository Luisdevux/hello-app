name: CI/CD Pipeline

on:
  push:
    branches:
      - main
jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout do código
              uses: actions/checkout@v3
            - name: Login no Docker Hub
              uses: docker/login-action@v3
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }}
            - name: Build e push da imagem Docker
              uses: docker/build-push-action@v5
              with:
                context: .
                push: true
                tags: ${{ secrets.DOCKER_USERNAME }}/hello-app:${{ github.run_number }}
            - name: Configurar acesso SSH para o repositório de manifests
              uses: webfactory/ssh-agent@v0.7.0
              with:
                ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
            - name: Clonar repositório de manifests
              run: git clone git@github.com:Luisdevux/hello-manifests.git manifests-repo
            - name: Instalar yq
              run: |
                wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O $HOME/yq
                chmod +x $HOME/yq
                sudo mv $HOME/yq /usr/local/bin/yq
                yq --version
            - name: Atualizar imagem no deployment
              run: |
                IMAGE_TAG=${{ github.run_number }}
                yq -i ".spec.template.spec.containers[0].image = \"${{ secrets.DOCKER_USERNAME }}/hello-app:${IMAGE_TAG}\"" manifests-repo/k8s/deployment.yaml
                git config --global user.email "action@github.com"
                git config --global user.name "GitHub Action"
                git add manifests-repo/k8s/deployment.yaml
                git commit -m "Atualiza imagem para tag ${IMAGE_TAG}" || echo "Nenhuma mudança para commitar"
                git push origin main
            - name: Setup kubectl
              uses: azure/setup-kubectl@v3
              with:
                version: '1.27.4'
            - name: Configurar kubeconfig
              env:
                KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
              run: |
                mkdir -p $HOME/.kube
                echo "$KUBE_CONFIG_DATA" | base64 --decode > $HOME/.kube/config
            - name: Aplicar manifests no Kubernetes
              run: kubectl apply -f manifests-repo/k8s/
            - name: Esperar rollout do deployment
              run: kubectl rollout status deployment/hello-app